@page "/Dashboard"

@using AntDesign.Charts
@using ImageBed.Data.Access
@using Title = AntDesign.Charts.Title
@using ImageBed.Data.Entity

@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

<div>
    <Row Gutter=32 Style="position:center;margin-top:20px;">
        <Col Span=6>
            <Card TitleTemplate=TitleTemplate_HostImageNum>
                <Body>
                    <h4>@HostImageNums</h4>
                </Body>
            </Card>
        </Col>
        <Col Span=6>
            <Card TitleTemplate=TitleTemplate_DiskOccupancy>
                <Body>
                    <h4>@DiskOccupancy</h4>
                </Body>
            </Card>
        </Col>
        <Col Span=6>
            <Card TitleTemplate=TitleTemplate_RunningMemUse>
                <Body>
                    <h4>@RunningMemUsage</h4>
                </Body>
            </Card>
        </Col>
        <Col Span=6>
            <Card TitleTemplate=TitleTemplate_CpuUse>
                <Body>
                    <h4>@CpuUsageRate</h4>
                </Body>
            </Card>
        </Col>
    </Row>
    <Row Style="margin-top:50px;">
        <Col Span=22>
            <Line Data="data4" Config="config4" />
        </Col>
    </Row>
</div>

@code{
    RenderFragment TitleTemplate_HostImageNum = @<Space><SpaceItem><Icon Type="picture" Theme="outline" Width=30 Height=30/></SpaceItem><SpaceItem>托管图片总数</SpaceItem></Space>;
    RenderFragment TitleTemplate_DiskOccupancy = @<Space><SpaceItem><Icon Type="database" Theme="outline" Width=30 Height=30/></SpaceItem><SpaceItem>磁盘存储占用</SpaceItem></Space>;
    RenderFragment TitleTemplate_RunningMemUse = @<Space><SpaceItem><Icon Type="fund-projection-screen" Theme="outline" Width=30 Height=30/></SpaceItem><SpaceItem>运行内存占用</SpaceItem></Space>;
    RenderFragment TitleTemplate_CpuUse = @<Space><SpaceItem><Icon Type="dashboard" Theme="outline" Width=30 Height=30/></SpaceItem><SpaceItem>CPU占用</SpaceItem></Space>
    ;

    int HostImageNums { get; set; } = 0;
    string DiskOccupancy { get; set; } = "0 MB";
    string RunningMemUsage { get; set; } = "0 MB";
    string CpuUsageRate { get; set; } = "0.00 %";


    protected override async Task OnInitializedAsync()
    {
        using var context = new OurDbContext();
        using var sqlImageData = new SQLImageData(context);

        List<ImageEntity> images = await sqlImageData.Get();

        HostImageNums = images.Count;

        double diskOccupancyKB = 0;
        foreach(var image in images)
        {
            diskOccupancyKB += UnitNameGenerator.ParseFileSize(image.Size ?? "0B");
        }
        DiskOccupancy = $"{(diskOccupancyKB / 1024.0).ToString("f3")} MB";
    }

    object[] data4 =
    {

    };

        LineConfig config4 = new LineConfig
        {
            Padding = "auto",
            XField = "date",
            YField = "value",
            YAxis = new ValueAxis
            {
                Label = new BaseAxisLabel()
            },
            Legend = new Legend
            {
                Position = "right-top"
            },
            SeriesField = "type",
            Color = new string[] { "#1979C9", "#D62A0D", "#FAA219" },
            Responsive = true,
            Smooth = true
        };
}