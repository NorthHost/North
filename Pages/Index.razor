@page "/"
@using AntDesign
@using ImageBed.Data.Entity

@inject IJSRuntime JS
@inject MessageService _message

<div class="upload">
    <Upload Multiple
            @attributes=attrs
            FileList=fileList
            ShowUploadList=false
            OnChange="CheckImages"
            OnSingleCompleted="UploadImage"
            OnCompleted="UploadFinished">
        <Image Id="upload" Width="550px" Src="images/upload.png" Preview=false Style="position:center;margin-top:130px;"/>
    </Upload>
    <Progress Percent=_progress_percent StrokeWidth=progress_stroke_width ShowInfo=progress_showInfo/>
</div>

@code
{
    Upload? upload;
    List<UploadFileItem> fileList = new List<UploadFileItem>();
    Dictionary<string, object> attrs = new Dictionary<string, object>
    {
        {"accept", "image/*"},
        {"Action", "/api/image" },
        {"Name", "files" },
        {"Multiple", true }
    };


    int image_total = 0;                        // 待上传的图片总数
    List<string> imageUrls = new();             // 图片url集和

    int _progress_percent = 0;                  // 上传完成的图片的百分比
    int progress_percent {
        get
        {
            return _progress_percent;
        }
        set
        {
            if(value == 0)
            {
                progress_stroke_width = 0;
                progress_showInfo = false;
            }
            else
            {
                progress_stroke_width = 10;
                progress_showInfo = true;
            }
            _progress_percent = value;
        }
    }
    int progress_stroke_width = 0;              // 进度条宽度
    bool progress_showInfo = false;             // 是否显示进度条信息


    /// <summary>
    /// 更新进度条进度
    /// </summary>
    void UpdateProgress()
    {
        progress_percent = (int)(imageUrls.ToArray().Length * 100.0 / image_total);
    }

    bool uploadRunning = false;
    void CheckImages(UploadInfo imageInfo)
    {
        if (!uploadRunning)
        {
            image_total = fileList.ToArray().Length;
            imageUrls.Clear();
            UpdateProgress();
            uploadRunning = true;
        }
    }

    void UploadImage(UploadInfo fileinfo)
    {
        fileList.Where(file => file.State == UploadState.Success && !string.IsNullOrWhiteSpace(file.Response)).ForEach(file =>
        {
            string? url = file.GetResponse<ApiResult<List<string>>>()?.Res?.First() ?? string.Empty;
            imageUrls.Add(url);
            UpdateProgress();
        });
    }

    async void UploadFinished()
    {
        progress_percent = 0;

        string urls = string.Empty;
        foreach(string url in imageUrls)
        {
            if(url == imageUrls.Last())
            {
                urls += url;
            }
            else
            {
                urls += $"{url}\n";
            }
        }
        await JS.InvokeVoidAsync("CopyToClip", urls);

        await _message.Success("图片上传完成！");
    }
}
<style type="text/css">
		.upload{
			width: 550px;
			margin:auto;
            left:10px;
		}
</style>