@page "/uploadTest"
@using Microsoft.EntityFrameworkCore
@using North.Core.Helper
@using North.Data.Access
@using North.Events.PasteMultimediaEvent
@using System.Reflection.Metadata
@using System.Diagnostics

@inject OurDbContext _context
@inject IJSRuntime JS
@inject ISnackbar _snackbar

<InputFile @onpastemultimedia="(e => Paste(e))" accept="image/*" OnChange="(e => Upload(e))" />

@code {
    private async Task Paste(PasteMultimediaEventsArgs args)
    {
        var blobs = args.Blobs;
        if(blobs.Length > 1){
            Console.WriteLine($"[Blob destroy] {blobs[0].Url}");
            Console.WriteLine($"[Blob Alive] {blobs[1].Url}");
            await JS.InvokeVoidAsync("destroy", blobs[0].Url);
        }
    }

    private async Task Upload(InputFileChangeEventArgs args){
        try{
            using (var image = args.GetMultipleFiles()[0].OpenReadStream(10 * 1024 * 1024))
            {
                var blobUrl = await JS.UploadToBlob(image, "image/jpg");
                //await JS.InvokeVoidAsync("copyTextToClipboard", blobUrl);
                var res = await JS.CopyToClipboard(blobUrl);
                _snackbar.Add($"[Upload success] {blobUrl}", Severity.Success);
            }
        }
        catch(Exception e){
            _snackbar.Add($"[Upload Failed] {e.Message}", Severity.Error);
        }
    }
}